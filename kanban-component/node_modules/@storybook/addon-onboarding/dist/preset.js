import CJS_COMPAT_NODE_URL_qgre5l3xmj from 'node:url';
import CJS_COMPAT_NODE_PATH_qgre5l3xmj from 'node:path';
import CJS_COMPAT_NODE_MODULE_qgre5l3xmj from "node:module";

var __filename = CJS_COMPAT_NODE_URL_qgre5l3xmj.fileURLToPath(import.meta.url);
var __dirname = CJS_COMPAT_NODE_PATH_qgre5l3xmj.dirname(__filename);
var require = CJS_COMPAT_NODE_MODULE_qgre5l3xmj.createRequire(import.meta.url);

// ------------------------------------------------------------
// end of CJS compatibility banner, injected by Storybook's esbuild configuration
// ------------------------------------------------------------
var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });

// src/preset.ts
import { telemetry } from "storybook/internal/telemetry";

// package.json
var version = "10.0.1";

// src/constants.ts
var STORYBOOK_ADDON_ONBOARDING_CHANNEL = "STORYBOOK_ADDON_ONBOARDING_CHANNEL";

// src/preset.ts
var experimental_serverChannel = /* @__PURE__ */ __name(async (channel, options) => {
  const { disableTelemetry } = await options.presets.apply("core", {});
  if (disableTelemetry) {
    return channel;
  }
  channel.on(STORYBOOK_ADDON_ONBOARDING_CHANNEL, ({ type, ...event }) => {
    if (type === "telemetry") {
      telemetry("addon-onboarding", { ...event, addonVersion: version });
    } else if (type === "survey") {
      telemetry("onboarding-survey", { ...event, addonVersion: version });
    }
  });
  return channel;
}, "experimental_serverChannel");
export {
  experimental_serverChannel
};
